// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login component matches snapshot when isFormValid 1`] = `
<Row
  justify="center"
>
  <Col
    lg={24}
    md={22}
    span={24}
  >
    <div
      className="auth-main__header"
    >
      <Logo
        bigLogoClassName="d-lg-none"
        isLink={true}
        isWhite={false}
        smallLogoClassName=""
      />
      <p
        className="mr-8 ml-auto"
      >
        <Memo(FormattedMessage)
          id="login.dontHaveAnAccountYet"
        />
      </p>
      <Link
        href="/sign_up"
      >
        <Button
          size="small"
          type="secondary"
        >
          <Memo(FormattedMessage)
            id="shared.signUp"
          />
        </Button>
      </Link>
    </div>
  </Col>
  <Col
    lg={16}
    md={22}
    span={24}
  >
    <div>
      <h1
        className="main-title"
      >
        <Memo(FormattedMessage)
          id="login.welcomeBack"
        />
      </h1>
      <p
        className="mb-24 mb-md-40"
      >
        <Memo(FormattedMessage)
          id="login.itsTimeForAnotherRoadTrip"
        />
      </p>
      <Connect(NotificationsDock)
        context="login"
      />
      <ForwardRef(InternalForm)
        layout="vertical"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Field
              autoComplete="email"
              component={[Function]}
              label={
                Object {
                  "id": "shared.email",
                }
              }
              name="email"
              placeholder={
                Object {
                  "id": "shared.emailPlaceholder",
                }
              }
              type="email"
            />
          </Col>
          <Col
            span={24}
          >
            <Field
              additionalLabelContent={
                <Link
                  href="/reset-password"
                >
                  <a
                    className="main-input__label-forgot-pass"
                  >
                    <Memo(FormattedMessage)
                      id="login.forgotPassword"
                    />
                  </a>
                </Link>
              }
              autoComplete="current-password"
              component={[Function]}
              label={
                Object {
                  "id": "shared.password",
                }
              }
              name="password"
            />
          </Col>
          <Col
            span={24}
          >
            <div
              className="auth-main__btn-wrap"
            >
              <GradientButton
                className="min-w-180 main-btn--sm-100"
                disabled={false}
                loading={false}
                onClick={[MockFunction]}
                size="large"
                text={
                  Object {
                    "id": "shared.logIn",
                  }
                }
              />
            </div>
          </Col>
        </Row>
      </ForwardRef(InternalForm)>
      <div
        className="mb-24"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Divider
              className="mt-0"
              plain={true}
            >
              <Memo(FormattedMessage)
                id="auth.or"
              />
            </Divider>
          </Col>
          <Connect(AuthSocial)
            redirectRoute={null}
          />
        </Row>
      </div>
    </div>
  </Col>
</Row>
`;

exports[`Login component matches snapshot when isSubmitDisabled is false 1`] = `
<Row
  justify="center"
>
  <Col
    lg={24}
    md={22}
    span={24}
  >
    <div
      className="auth-main__header"
    >
      <Logo
        bigLogoClassName="d-lg-none"
        isLink={true}
        isWhite={false}
        smallLogoClassName=""
      />
      <p
        className="mr-8 ml-auto"
      >
        <Memo(FormattedMessage)
          id="login.dontHaveAnAccountYet"
        />
      </p>
      <Link
        href="/sign_up"
      >
        <Button
          size="small"
          type="secondary"
        >
          <Memo(FormattedMessage)
            id="shared.signUp"
          />
        </Button>
      </Link>
    </div>
  </Col>
  <Col
    lg={16}
    md={22}
    span={24}
  >
    <div>
      <h1
        className="main-title"
      >
        <Memo(FormattedMessage)
          id="login.welcomeBack"
        />
      </h1>
      <p
        className="mb-24 mb-md-40"
      >
        <Memo(FormattedMessage)
          id="login.itsTimeForAnotherRoadTrip"
        />
      </p>
      <Connect(NotificationsDock)
        context="login"
      />
      <ForwardRef(InternalForm)
        layout="vertical"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Field
              autoComplete="email"
              component={[Function]}
              label={
                Object {
                  "id": "shared.email",
                }
              }
              name="email"
              placeholder={
                Object {
                  "id": "shared.emailPlaceholder",
                }
              }
              type="email"
            />
          </Col>
          <Col
            span={24}
          >
            <Field
              additionalLabelContent={
                <Link
                  href="/reset-password"
                >
                  <a
                    className="main-input__label-forgot-pass"
                  >
                    <Memo(FormattedMessage)
                      id="login.forgotPassword"
                    />
                  </a>
                </Link>
              }
              autoComplete="current-password"
              component={[Function]}
              label={
                Object {
                  "id": "shared.password",
                }
              }
              name="password"
            />
          </Col>
          <Col
            span={24}
          >
            <div
              className="auth-main__btn-wrap"
            >
              <Button
                className="min-w-180 main-btn--sm-100"
                disabled={false}
                loading={false}
                onClick={[MockFunction]}
                size="large"
              >
                <Memo(FormattedMessage)
                  id="shared.logIn"
                />
              </Button>
            </div>
          </Col>
        </Row>
      </ForwardRef(InternalForm)>
      <div
        className="mb-24"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Divider
              className="mt-0"
              plain={true}
            >
              <Memo(FormattedMessage)
                id="auth.or"
              />
            </Divider>
          </Col>
          <Connect(AuthSocial)
            redirectRoute={null}
          />
        </Row>
      </div>
    </div>
  </Col>
</Row>
`;

exports[`Login component matches snapshot when isSubmitting 1`] = `
<Row
  justify="center"
>
  <Col
    lg={24}
    md={22}
    span={24}
  >
    <div
      className="auth-main__header"
    >
      <Logo
        bigLogoClassName="d-lg-none"
        isLink={true}
        isWhite={false}
        smallLogoClassName=""
      />
      <p
        className="mr-8 ml-auto"
      >
        <Memo(FormattedMessage)
          id="login.dontHaveAnAccountYet"
        />
      </p>
      <Link
        href="/sign_up"
      >
        <Button
          size="small"
          type="secondary"
        >
          <Memo(FormattedMessage)
            id="shared.signUp"
          />
        </Button>
      </Link>
    </div>
  </Col>
  <Col
    lg={16}
    md={22}
    span={24}
  >
    <div>
      <h1
        className="main-title"
      >
        <Memo(FormattedMessage)
          id="login.welcomeBack"
        />
      </h1>
      <p
        className="mb-24 mb-md-40"
      >
        <Memo(FormattedMessage)
          id="login.itsTimeForAnotherRoadTrip"
        />
      </p>
      <Connect(NotificationsDock)
        context="login"
      />
      <ForwardRef(InternalForm)
        layout="vertical"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Field
              autoComplete="email"
              component={[Function]}
              label={
                Object {
                  "id": "shared.email",
                }
              }
              name="email"
              placeholder={
                Object {
                  "id": "shared.emailPlaceholder",
                }
              }
              type="email"
            />
          </Col>
          <Col
            span={24}
          >
            <Field
              additionalLabelContent={
                <Link
                  href="/reset-password"
                >
                  <a
                    className="main-input__label-forgot-pass"
                  >
                    <Memo(FormattedMessage)
                      id="login.forgotPassword"
                    />
                  </a>
                </Link>
              }
              autoComplete="current-password"
              component={[Function]}
              label={
                Object {
                  "id": "shared.password",
                }
              }
              name="password"
            />
          </Col>
          <Col
            span={24}
          >
            <div
              className="auth-main__btn-wrap"
            >
              <Button
                className="min-w-180 main-btn--sm-100"
                disabled={true}
                loading={true}
                onClick={[MockFunction]}
                size="large"
              >
                <Memo(FormattedMessage)
                  id="shared.logIn"
                />
              </Button>
            </div>
          </Col>
        </Row>
      </ForwardRef(InternalForm)>
      <div
        className="mb-24"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Divider
              className="mt-0"
              plain={true}
            >
              <Memo(FormattedMessage)
                id="auth.or"
              />
            </Divider>
          </Col>
          <Connect(AuthSocial)
            redirectRoute={null}
          />
        </Row>
      </div>
    </div>
  </Col>
</Row>
`;

exports[`Login component matches snapshot when status present 1`] = `
<Row
  justify="center"
>
  <Col
    lg={24}
    md={22}
    span={24}
  >
    <div
      className="auth-main__header"
    >
      <Logo
        bigLogoClassName="d-lg-none"
        isLink={true}
        isWhite={false}
        smallLogoClassName=""
      />
      <p
        className="mr-8 ml-auto"
      >
        <Memo(FormattedMessage)
          id="login.dontHaveAnAccountYet"
        />
      </p>
      <Link
        href="/sign_up"
      >
        <Button
          size="small"
          type="secondary"
        >
          <Memo(FormattedMessage)
            id="shared.signUp"
          />
        </Button>
      </Link>
    </div>
  </Col>
  <Col
    lg={16}
    md={22}
    span={24}
  >
    <div>
      <h1
        className="main-title"
      >
        <Memo(FormattedMessage)
          id="login.welcomeBack"
        />
      </h1>
      <p
        className="mb-24 mb-md-40"
      >
        <Memo(FormattedMessage)
          id="login.itsTimeForAnotherRoadTrip"
        />
      </p>
      <Alert
        icon={
          <i
            className="icon icon-info"
          />
        }
        message="Base error"
        showIcon={true}
        type="error"
      />
      <Connect(NotificationsDock)
        context="login"
      />
      <ForwardRef(InternalForm)
        layout="vertical"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Field
              autoComplete="email"
              component={[Function]}
              label={
                Object {
                  "id": "shared.email",
                }
              }
              name="email"
              placeholder={
                Object {
                  "id": "shared.emailPlaceholder",
                }
              }
              type="email"
            />
          </Col>
          <Col
            span={24}
          >
            <Field
              additionalLabelContent={
                <Link
                  href="/reset-password"
                >
                  <a
                    className="main-input__label-forgot-pass"
                  >
                    <Memo(FormattedMessage)
                      id="login.forgotPassword"
                    />
                  </a>
                </Link>
              }
              autoComplete="current-password"
              component={[Function]}
              label={
                Object {
                  "id": "shared.password",
                }
              }
              name="password"
            />
          </Col>
          <Col
            span={24}
          >
            <div
              className="auth-main__btn-wrap"
            >
              <Button
                className="min-w-180 main-btn--sm-100"
                disabled={false}
                loading={false}
                onClick={[MockFunction]}
                size="large"
              >
                <Memo(FormattedMessage)
                  id="shared.logIn"
                />
              </Button>
            </div>
          </Col>
        </Row>
      </ForwardRef(InternalForm)>
      <div
        className="mb-24"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Divider
              className="mt-0"
              plain={true}
            >
              <Memo(FormattedMessage)
                id="auth.or"
              />
            </Divider>
          </Col>
          <Connect(AuthSocial)
            redirectRoute={null}
          />
        </Row>
      </div>
    </div>
  </Col>
</Row>
`;

exports[`Login component matches snapshot with default props 1`] = `
<Row
  justify="center"
>
  <Col
    lg={24}
    md={22}
    span={24}
  >
    <div
      className="auth-main__header"
    >
      <Logo
        bigLogoClassName="d-lg-none"
        isLink={true}
        isWhite={false}
        smallLogoClassName=""
      />
      <p
        className="mr-8 ml-auto"
      >
        <Memo(FormattedMessage)
          id="login.dontHaveAnAccountYet"
        />
      </p>
      <Link
        href="/sign_up"
      >
        <Button
          size="small"
          type="secondary"
        >
          <Memo(FormattedMessage)
            id="shared.signUp"
          />
        </Button>
      </Link>
    </div>
  </Col>
  <Col
    lg={16}
    md={22}
    span={24}
  >
    <div>
      <h1
        className="main-title"
      >
        <Memo(FormattedMessage)
          id="login.welcomeBack"
        />
      </h1>
      <p
        className="mb-24 mb-md-40"
      >
        <Memo(FormattedMessage)
          id="login.itsTimeForAnotherRoadTrip"
        />
      </p>
      <Connect(NotificationsDock)
        context="login"
      />
      <ForwardRef(InternalForm)
        layout="vertical"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Field
              autoComplete="email"
              component={[Function]}
              label={
                Object {
                  "id": "shared.email",
                }
              }
              name="email"
              placeholder={
                Object {
                  "id": "shared.emailPlaceholder",
                }
              }
              type="email"
            />
          </Col>
          <Col
            span={24}
          >
            <Field
              additionalLabelContent={
                <Link
                  href="/reset-password"
                >
                  <a
                    className="main-input__label-forgot-pass"
                  >
                    <Memo(FormattedMessage)
                      id="login.forgotPassword"
                    />
                  </a>
                </Link>
              }
              autoComplete="current-password"
              component={[Function]}
              label={
                Object {
                  "id": "shared.password",
                }
              }
              name="password"
            />
          </Col>
          <Col
            span={24}
          >
            <div
              className="auth-main__btn-wrap"
            >
              <Button
                className="min-w-180 main-btn--sm-100"
                disabled={false}
                loading={false}
                onClick={[MockFunction]}
                size="large"
              >
                <Memo(FormattedMessage)
                  id="shared.logIn"
                />
              </Button>
            </div>
          </Col>
        </Row>
      </ForwardRef(InternalForm)>
      <div
        className="mb-24"
      >
        <Row
          gutter={24}
        >
          <Col
            span={24}
          >
            <Divider
              className="mt-0"
              plain={true}
            >
              <Memo(FormattedMessage)
                id="auth.or"
              />
            </Divider>
          </Col>
          <Connect(AuthSocial)
            redirectRoute={null}
          />
        </Row>
      </div>
    </div>
  </Col>
</Row>
`;
