// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListingDetails container tests checks mapPropsToValues configs 1`] = `
Object {
  "listingDescription": "desc",
  "listingName": "test",
}
`;

exports[`ListingDetails container tests has validation schema 1`] = `
Object {
  "fields": Object {
    "listingDescription": Object {
      "label": undefined,
      "meta": undefined,
      "notOneOf": Array [],
      "oneOf": Array [],
      "tests": Array [
        Object {
          "name": "max",
          "params": Object {
            "max": 2000,
          },
        },
      ],
      "type": "string",
    },
    "listingName": Object {
      "label": undefined,
      "meta": undefined,
      "notOneOf": Array [],
      "oneOf": Array [],
      "tests": Array [
        Object {
          "name": "max",
          "params": Object {
            "max": 74,
          },
        },
        Object {
          "name": "required",
          "params": undefined,
        },
      ],
      "type": "string",
    },
  },
  "label": undefined,
  "meta": undefined,
  "notOneOf": Array [],
  "oneOf": Array [],
  "tests": Array [],
  "type": "object",
}
`;

exports[`ListingDetails container tests matches snapshot 1`] = `
<ListingDetails
  camper={
    Object {
      "blockedPeriods": Array [],
      "camperPhotos": Array [],
      "camperPolicy": null,
      "deliveryInformation": null,
      "description": "desc",
      "externalCalendars": Array [],
      "id": "a18f7338-c2b3-4cee-be4d-579c0a726c1a",
      "insurance": "pending",
      "name": "test",
      "owner": Object {
        "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
        "type": "owner",
      },
      "place": null,
      "pricingInfo": null,
      "pricingPeriods": Array [],
      "publicId": "111",
      "specificationDetail": null,
      "status": "draft",
    }
  }
  camperCompleteness={44}
  camperId="test id"
  canSaveAndContinue={false}
  dirty={true}
  handleSubmit={[MockFunction]}
  hideModal={[Function]}
  isCamperExist={true}
  isLoading={true}
  isValid={true}
  mapPropsToValues={[Function]}
  onBackButtonClick={[Function]}
  onSubmit={[Function]}
  router={
    Object {
      "push": [MockFunction],
    }
  }
  setFieldValue={[MockFunction]}
  setLeavePageMethod={[Function]}
  showModal={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "logicMiddleware": Object {
        "whenComplete": [MockFunction],
      },
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  validateForm={[MockFunction]}
  validationSchema={[Function]}
  values={
    Object {
      "listingDescription": "",
      "listingName": "",
    }
  }
/>
`;
