// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BaseDiscountComponent component tests matches snapshot 1`] = `
<div
  className="calendar-listing__side-main-item"
>
  <Button
    className="ant-btn-slideout"
    onClick={[MockFunction]}
  >
    <i
      className="icon icon-discount"
    />
    <span>
      <Memo(FormattedMessage)
        id="shared.baseDiscounts"
      />
    </span>
    <i
      className="icon icon-right ml-auto"
    />
  </Button>
  <div
    className="calendar-listing__side-slideout calendar-listing__side-slideout--active"
  >
    <ForwardRef(InternalForm)
      layout="vertical"
    >
      <div
        className="calendar-listing__side-slideout__main"
      >
        <div
          className="mb-16"
        >
          <BackButton
            discardConfirm={[MockFunction]}
            discardPrepare={[MockFunction]}
            discardReject={[MockFunction]}
            isPopoverVisible={false}
          />
        </div>
        <h3
          className="text-subheader mb-8"
        >
          <Memo(FormattedMessage)
            id="shared.baseDiscounts"
          />
        </h3>
        <p
          className="mb-16"
        >
          <Memo(FormattedMessage)
            id="addNewCamper.pricing.baseDiscountsSubTitle"
          />
        </p>
        <div
          className="mb-16"
        >
          <div
            className="d-flex align-items-center mb-8"
          >
            <Switch
              checked={2}
              onChange={[MockFunction]}
            />
            <span
              className="ml-8"
            >
              <Memo(FormattedMessage)
                id="addNewCamper.pricing.offerWeeklyTitle"
              />
            </span>
          </div>
          <p
            className="text-caption"
          >
            <Memo(FormattedMessage)
              id="addNewCamper.pricing.offerWeeklySubTitle"
            />
          </p>
        </div>
        <Field
          component={[Function]}
          name="weeklyDiscountPercent"
          tooltip={
            Object {
              "id": "addNewCamper.pricing.pricePerWeek",
              "values": Object {
                "price": "$1",
              },
            }
          }
          type="number"
        >
          <span
            className="main-input__add-txt"
          >
            %
          </span>
        </Field>
        <div
          className="mb-16"
        >
          <div
            className="d-flex align-items-center mb-8"
          >
            <Switch
              checked={2}
              onChange={[MockFunction]}
            />
            <span
              className="ml-8"
            >
              <Memo(FormattedMessage)
                id="addNewCamper.pricing.offerMonthlyTitle"
              />
            </span>
          </div>
          <p
            className="text-caption"
          >
            <Memo(FormattedMessage)
              id="addNewCamper.pricing.offer28MonthlySubTitle"
            />
          </p>
        </div>
        <Field
          component={[Function]}
          formItemClasses="mb-0"
          name="monthlyDiscountPercent"
          tooltip={
            Object {
              "id": "addNewCamper.pricing.pricePerMonth",
              "values": Object {
                "price": "$2",
              },
            }
          }
          type="number"
        >
          <span
            className="main-input__add-txt"
          >
            %
          </span>
        </Field>
      </div>
      <FooterComponent
        canSubmit={true}
        discardConfirm={[MockFunction]}
        discardPrepare={[MockFunction]}
        discardReject={[MockFunction]}
        isDiscardPopoverVisible={false}
        isLoading={true}
        isSavePopoverVisible={true}
        saveConfirm={[MockFunction]}
        savePrepare={[MockFunction]}
        saveReject={[MockFunction]}
        submit={[MockFunction]}
        submitBtnText={
          Object {
            "id": "shared.save",
          }
        }
        withSavePopover={true}
        withSavePopoverWarning={true}
      />
    </ForwardRef(InternalForm)>
  </div>
</div>
`;
