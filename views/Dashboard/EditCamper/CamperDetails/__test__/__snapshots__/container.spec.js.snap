// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CamperDetails container tests checks mapPropsToValues configs 1`] = `
Object {
  "camperLocation": Object {
    "id": "neighborhood.290416",
    "latitude": 40.772,
    "longitude": -73.93030000000002,
    "place": "Astoria, New York, New York 11102, United States",
  },
  "drivetrain": "4x4",
  "freshWater": 0,
  "fuelType": "electric",
  "grayWater": 0,
  "insideHeight": "low_top",
  "length": "67",
  "mileage": "Under 50,000",
  "modelNaming": "Clair Weimann",
  "name": "Katelyn Lowe",
  "seats": "1",
  "sleeps": "1",
  "stateRegistred": "Arkansas",
  "transmission": "automatice",
  "vehicleTypeName": "Modern Van",
  "whoBuiltCamper": "Vasya",
  "year": "1585",
}
`;

exports[`CamperDetails container tests container snapshot 1`] = `
<CamperDetails
  builtCamper={
    Array [
      Object {
        "label": "Santina McGlynn",
        "value": "Santina McGlynn",
      },
      Object {
        "label": "Catheryn Haley",
        "value": "Catheryn Haley",
      },
    ]
  }
  camper={
    Object {
      "blockedPeriods": Array [],
      "camperAddition": Object {
        "amenityHealthSafetyItems": Array [
          Object {
            "healthSafety": Object {
              "iconUrl": "path/to/icon/url",
              "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
              "name": "name",
            },
          },
        ],
        "camperQuestions": Array [
          Object {
            "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
            "required": true,
            "text": "test",
          },
        ],
        "customRestrictionRoads": Array [
          Object {
            "active": true,
            "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
            "name": "name",
          },
        ],
        "customRestrictionRules": Array [
          Object {
            "active": true,
            "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
            "name": "name",
          },
        ],
        "customTravelAccessories": Array [
          Object {
            "active": true,
            "description": "",
            "id": "dd477886-ec22-4da9-ba4c-08627f35fb1a",
            "maxAmount": "2.0",
            "name": "Bike Rack",
            "price": "1.0",
            "priceUnit": "each",
          },
        ],
        "customTravelRestrictions": Array [
          Object {
            "active": true,
            "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
            "name": "name",
          },
        ],
        "restrictionRoad": Object {
          "dirtryRoad": true,
          "fourWheelRoad": false,
          "offRoad": false,
          "snowAndIceRoad": false,
        },
        "restrictionRule": Object {
          "allowPets": false,
          "festivalApproved": false,
          "smoking": false,
        },
        "travelRestriction": Object {
          "burningMan": false,
          "canada": true,
          "mexico": false,
        },
      },
      "camperCalendar": Object {
        "blockedPeriods": Array [
          Object {
            "endDate": "2021-08-06",
            "id": "56ceb535-322f-42c6-8dcd-a88ad59000f3",
            "startDate": "2021-08-05",
          },
          Object {
            "endDate": "2021-08-25",
            "id": "17a32ec0-a486-4247-910c-6c0c57ba6ec3",
            "startDate": "2021-08-25",
          },
          Object {
            "endDate": "2021-07-28",
            "id": "2c7bbaef-6b00-494f-b005-6a762e90c785",
            "startDate": "2021-07-28",
          },
        ],
        "customDiscountPeriods": Array [
          Object {
            "endDate": "2021-07-28",
            "id": "ffb3f0cc-4513-4fdc-81d0-03587232d9ee",
            "monthlyDiscountPercent": 23,
            "startDate": "2021-07-27",
            "weeklyDiscountPercent": 15,
          },
          Object {
            "endDate": "2021-07-28",
            "id": "a070339d-7058-4769-8e16-814084c6bfe3",
            "monthlyDiscountPercent": 23,
            "startDate": "2021-07-28",
            "weeklyDiscountPercent": 15,
          },
          Object {
            "endDate": "2021-07-28",
            "id": "aba16cba-5873-4273-8172-816b276a2db7",
            "monthlyDiscountPercent": 44,
            "startDate": "2021-07-28",
            "weeklyDiscountPercent": 44,
          },
          Object {
            "endDate": "2021-07-29",
            "id": "586016b9-d351-4ca1-ac8a-373e7e3b8832",
            "monthlyDiscountPercent": 33,
            "startDate": "2021-07-29",
            "weeklyDiscountPercent": 15,
          },
        ],
        "externalCalendars": Array [],
        "id": "e1db81b1-8ad5-4e88-9c99-f5c9020148eb",
        "pricingPeriods": Array [
          Object {
            "endDate": "2021-07-28",
            "id": "8aa92a51-ef00-4dc6-8b84-2820869b9278",
            "price": "33.0",
            "startDate": "2021-07-28",
          },
          Object {
            "endDate": "2021-07-30",
            "id": "248ba38e-e18a-467c-996b-36aa4bd73e85",
            "price": "320.0",
            "startDate": "2021-07-29",
          },
        ],
      },
      "camperPhotos": Array [
        Object {
          "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
          "photoUrl1100": "photoUrl1100",
        },
      ],
      "camperRule": Object {
        "bookingApprovalPolicy": "instant_book",
        "cancellationPolicy": "easy_going",
        "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
      },
      "deliveryInformation": Object {
        "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
        "pickup": true,
      },
      "description": "desc",
      "estimatedEarning": 1200,
      "externalCalendars": Array [],
      "glamper": true,
      "id": "a18f7338-c2b3-4cee-be4d-579c0a726c1a",
      "insurance": "pending",
      "insuranceInfo": Object {
        "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
      },
      "latitude": 40.772,
      "longitude": -73.93030000000002,
      "name": "test",
      "owner": Object {
        "account": Object {
          "createdAt": "2021-07-09T13:39:26.587Z",
          "drivingLicenceVerified": false,
          "email": "kateryna.sessa+owner@rubygarage.org",
          "emailVerified": false,
          "id": "12563773-6e8f-4861-8abd-82a78632c6ac",
          "user": Object {
            "avatarUrl": null,
            "createdAt": "2021-07-09T13:39:26.590Z",
            "firstName": "Kat",
            "id": "77015afb-71e3-4b94-a9cb-69a97dc6b358",
            "lastName": "Kat",
            "updatedAt": "2021-07-09T13:39:26.590Z",
          },
        },
        "avatarUrl": null,
        "averageRating": null,
        "businessTitle": null,
        "campersCount": 25,
        "createdAt": "Member since July 2021",
        "description": "description",
        "email": null,
        "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
        "idVerified": false,
        "type": "owner",
      },
      "place": "Astoria, New York, New York 11102, United States",
      "placeId": "neighborhood.290416",
      "pricingInfo": Object {
        "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
      },
      "pricingPeriods": Array [],
      "publicId": "111",
      "specificationDetail": Object {
        "drivetrain": "4x4",
        "fuelType": "electric",
        "insideHeight": "low_top",
        "length": "67.89",
        "mileage": "Under 50,000",
        "modelNaming": "Clair Weimann",
        "name": "Katelyn Lowe",
        "seats": 1,
        "sleeps": 1,
        "stateRegistred": "Arkansas",
        "transmission": "automatice",
        "whoBuiltCamper": "Vasya",
        "year": 1585,
      },
      "status": "draft",
      "tripFee": Object {
        "cleaning": 1,
        "customFees": Array [
          Object {
            "frequency": "per_day",
            "id": "id",
            "name": "name",
            "price": 5,
          },
        ],
        "dumpingFee": 2,
        "flue": 3,
        "id": "74a9c587-7b78-4aa5-ba93-ba3d310be127",
        "lateDropOff": 4,
        "tripFeeGenerator": Object {
          "available": 8,
          "limit": true,
          "overage": 9,
        },
        "tripFeeMileage": Object {
          "available": 6,
          "limit": true,
          "overage": 7,
        },
      },
      "vehicleTypeIconUrl": "test.svg",
      "vehicleTypeName": "Modern Van",
    }
  }
  camperId="test"
  camperLength={
    Array [
      Object {
        "label": "10 \`",
        "value": "10",
      },
      Object {
        "label": "11 \`",
        "value": "11",
      },
      Object {
        "label": "12 \`",
        "value": "12",
      },
      Object {
        "label": "13 \`",
        "value": "13",
      },
      Object {
        "label": "14 \`",
        "value": "14",
      },
      Object {
        "label": "15 \`",
        "value": "15",
      },
      Object {
        "label": "16 \`",
        "value": "16",
      },
      Object {
        "label": "16.5 \`",
        "value": "16.5",
      },
      Object {
        "label": "17 \`",
        "value": "17",
      },
      Object {
        "label": "17.5 \`",
        "value": "17.5",
      },
      Object {
        "label": "18 \`",
        "value": "18",
      },
      Object {
        "label": "18.5 \`",
        "value": "18.5",
      },
      Object {
        "label": "19 \`",
        "value": "19",
      },
      Object {
        "label": "19.5 \`",
        "value": "19.5",
      },
      Object {
        "label": "20 \`",
        "value": "20",
      },
      Object {
        "label": "20.5 \`",
        "value": "20.5",
      },
      Object {
        "label": "21 \`",
        "value": "21",
      },
      Object {
        "label": "21.5 \`",
        "value": "21.5",
      },
      Object {
        "label": "22 \`",
        "value": "22",
      },
      Object {
        "label": "22.5 \`",
        "value": "22.5",
      },
      Object {
        "label": "23 \`",
        "value": "23",
      },
      Object {
        "label": "23.5 \`",
        "value": "23.5",
      },
      Object {
        "label": "24 \`",
        "value": "24",
      },
      Object {
        "label": "24.5 \`",
        "value": "24.5",
      },
      Object {
        "label": "25 \`",
        "value": "25",
      },
      Object {
        "label": "25.5 \`",
        "value": "25.5",
      },
      Object {
        "label": "26 \`",
        "value": "26",
      },
      Object {
        "label": "26.5 \`",
        "value": "26.5",
      },
      Object {
        "label": "27 \`",
        "value": "27",
      },
      Object {
        "label": "27.5 \`",
        "value": "27.5",
      },
      Object {
        "label": "28 \`",
        "value": "28",
      },
      Object {
        "label": "28.5 \`",
        "value": "28.5",
      },
      Object {
        "label": "29 \`",
        "value": "29",
      },
      Object {
        "label": "29.5 \`",
        "value": "29.5",
      },
      Object {
        "label": "30 \`",
        "value": "30",
      },
      Object {
        "label": "31 \`",
        "value": "31",
      },
      Object {
        "label": "32 \`",
        "value": "32",
      },
      Object {
        "label": "33 \`",
        "value": "33",
      },
      Object {
        "label": "34 \`",
        "value": "34",
      },
      Object {
        "label": "35 \`",
        "value": "35",
      },
      Object {
        "label": "36 \`",
        "value": "36",
      },
      Object {
        "label": "37 \`",
        "value": "37",
      },
      Object {
        "label": "38 \`",
        "value": "38",
      },
      Object {
        "label": "39 \`",
        "value": "39",
      },
      Object {
        "label": "40 \`",
        "value": "40",
      },
    ]
  }
  enableReinitialize={true}
  handleSubmit={[Function]}
  handlerMake={[Function]}
  hideModal={[Function]}
  intl={
    Object {
      "formatMessage": [Function],
    }
  }
  isCamperExist={true}
  isFormValid={true}
  isLoading={true}
  isValid={true}
  leavePagePrepare={[Function]}
  mapPropsToValues={[Function]}
  router={
    Object {
      "push": [MockFunction],
    }
  }
  setFieldValue={[MockFunction]}
  setValues={[MockFunction]}
  showModal={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  updateCamperSpecification={[Function]}
  validationSchema={[Function]}
  values={Object {}}
  vehicleMake={
    Array [
      Object {
        "id": "cf045637-c752-4690-8a82-89f4f0c5d69c",
        "label": "Jonie Altenwerth",
        "value": "Jonie Altenwerth",
      },
    ]
  }
  vehicleModel={
    Array [
      Object {
        "builderName": "Catheryn Haley",
        "id": "fc7b3921-d1fb-4903-8830-9018167e5ba6",
        "insideHeigh": "Laraine Breitenberg",
        "label": "Karoline Pollich",
        "length": "19.0",
        "value": "Karoline Pollich",
      },
      Object {
        "builderName": "Santina McGlynn",
        "id": "d9d1f129-c11f-4893-b887-c61434c9940b",
        "insideHeigh": "Dodie Stracke",
        "label": "Thao Mitchell",
        "length": "86.9",
        "value": "Thao Mitchell",
      },
    ]
  }
  vehicleType={
    Array [
      Object {
        "estimatedEarning": 1200,
        "iconUrl": ".svg",
        "id": "5090dd03-b9f7-461d-8351-f120b71dd07c",
        "name": "Kiley Cruickshank",
        "vehicleMakes": Array [
          Object {
            "id": "cf045637-c752-4690-8a82-89f4f0c5d69c",
            "name": "Jonie Altenwerth",
            "vehicleModels": Array [
              Object {
                "builderName": "Santina McGlynn",
                "id": "d9d1f129-c11f-4893-b887-c61434c9940b",
                "insideHeigh": "Dodie Stracke",
                "length": "86.9",
                "name": "Thao Mitchell",
                "year": 1281,
              },
              Object {
                "builderName": "Catheryn Haley",
                "id": "fc7b3921-d1fb-4903-8830-9018167e5ba6",
                "insideHeigh": "Laraine Breitenberg",
                "length": "19.0",
                "name": "Karoline Pollich",
                "year": 882,
              },
            ],
          },
        ],
      },
    ]
  }
  vehicleTypes={
    Array [
      Object {
        "estimatedEarning": 1200,
        "id": "5090dd03-b9f7-461d-8351-f120b71dd07c",
        "img": ".svg",
        "label": "Kiley Cruickshank",
        "value": "Kiley Cruickshank",
      },
    ]
  }
  years={
    Array [
      Object {
        "label": "2000",
        "value": "2000",
      },
      Object {
        "label": "1999",
        "value": "1999",
      },
      Object {
        "label": "1998",
        "value": "1998",
      },
      Object {
        "label": "1997",
        "value": "1997",
      },
      Object {
        "label": "1996",
        "value": "1996",
      },
      Object {
        "label": "1995",
        "value": "1995",
      },
      Object {
        "label": "1994",
        "value": "1994",
      },
      Object {
        "label": "1993",
        "value": "1993",
      },
      Object {
        "label": "1992",
        "value": "1992",
      },
      Object {
        "label": "1991",
        "value": "1991",
      },
      Object {
        "label": "1990",
        "value": "1990",
      },
      Object {
        "label": "1989",
        "value": "1989",
      },
      Object {
        "label": "1988",
        "value": "1988",
      },
      Object {
        "label": "1987",
        "value": "1987",
      },
      Object {
        "label": "1986",
        "value": "1986",
      },
      Object {
        "label": "1985",
        "value": "1985",
      },
      Object {
        "label": "1984",
        "value": "1984",
      },
      Object {
        "label": "1983",
        "value": "1983",
      },
      Object {
        "label": "1982",
        "value": "1982",
      },
      Object {
        "label": "1981",
        "value": "1981",
      },
      Object {
        "label": "1980",
        "value": "1980",
      },
      Object {
        "label": "1979",
        "value": "1979",
      },
      Object {
        "label": "1978",
        "value": "1978",
      },
      Object {
        "label": "1977",
        "value": "1977",
      },
      Object {
        "label": "1976",
        "value": "1976",
      },
      Object {
        "label": "1975",
        "value": "1975",
      },
      Object {
        "label": "1974",
        "value": "1974",
      },
      Object {
        "label": "1973",
        "value": "1973",
      },
      Object {
        "label": "1972",
        "value": "1972",
      },
      Object {
        "label": "1971",
        "value": "1971",
      },
      Object {
        "label": "1970",
        "value": "1970",
      },
    ]
  }
/>
`;

exports[`CamperDetails container tests has validation schema 1`] = `
ObjectSchema {
  "_blacklist": ReferenceSet {
    "list": Set {},
    "refs": Map {},
  },
  "_blacklistError": undefined,
  "_excludedEdges": Array [],
  "_nodes": Array [
    "grayWater",
    "freshWater",
    "drivetrain",
    "whoBuiltCamper",
    "fuelType",
    "mileage",
    "transmission",
    "stateRegistred",
    "camperLocation",
    "sleeps",
    "seats",
    "insideHeight",
    "length",
    "year",
    "modelNaming",
    "name",
    "vehicleTypeName",
  ],
  "_sortErrors": [Function],
  "_typeError": [Function],
  "_whitelist": ReferenceSet {
    "list": Set {},
    "refs": Map {},
  },
  "_whitelistError": undefined,
  "conditions": Array [],
  "deps": Array [],
  "exclusiveTests": Object {},
  "fields": Object {
    "camperLocation": ObjectSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_excludedEdges": Array [],
      "_nodes": Array [],
      "_sortErrors": [Function],
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "geocoder": false,
      },
      "fields": Object {},
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "optional",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "object",
    },
    "drivetrain": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "freshWater": NumberSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "max": true,
        "min": true,
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
        [Function],
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "number",
    },
    "fuelType": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "grayWater": NumberSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "max": true,
        "min": true,
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
        [Function],
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "number",
    },
    "insideHeight": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "length": NumberSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "max": true,
        "min": true,
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
        [Function],
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "number",
    },
    "mileage": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "modelNaming": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "name": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "seats": NumberSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "max": true,
        "min": true,
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
        [Function],
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "number",
    },
    "sleeps": NumberSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "max": true,
        "min": true,
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
        [Function],
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "number",
    },
    "stateRegistred": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "transmission": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "vehicleTypeName": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "whoBuiltCamper": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {},
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "optional",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
    "year": StringSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_mutate": undefined,
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {
        "required": true,
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "required",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [
        [Function],
      ],
      "transforms": Array [
        [Function],
      ],
      "type": "string",
    },
  },
  "spec": Object {
    "abortEarly": true,
    "nullable": false,
    "presence": "optional",
    "recursive": true,
    "strict": false,
    "strip": false,
  },
  "tests": Array [],
  "transforms": Array [
    [Function],
  ],
  "type": "object",
}
`;
